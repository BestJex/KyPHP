<?php
// +----------------------------------------------------------------------
// | [KyPHP System] Copyright (c) 2020 http://www.kuryun.com/
// +----------------------------------------------------------------------
// | [KyPHP] 并不是自由软件,你可免费使用,未经许可不能去掉KyPHP相关版权
// +----------------------------------------------------------------------
// | Author: fudaoji <461960962@qq.com>
// +----------------------------------------------------------------------


namespace app\mp\controller;


use think\Db;
use think\Validate;

class App extends Base
{

    private $addonCfByDb;
    private $addonCfByFile;
    private $addonName;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this->checkAddon();
    }

    /**
     * 验证插件及插件信息
     * @author: fudaoji<fdj@kuryun.cn>
     */
    private function checkAddon(){
        $name = $this->addonName = input('name', '');
        $addon_db = model('addons')->getOneByMap(['addon' => $name, 'status' => 1]);
        if (empty($addon_db)) {
            $this->error('应用不存在或已下架');
        }
        $this->addonCfByDb = $addon_db;

        $addon_local = model('addons')->getAddonConfigByFile($name);
        if($addon_local === false){
            $this->error('本地不存在该应用');
        }
        $this->addonCfByFile = $addon_local;

        if ($addon_db['addon'] != $addon_local['addon']) {
            $this->error('应用信息不相符，请检查');
        }

        $addon_menu = isset($addon_local['menu']) ? $addon_local['menu'] : '';

        $node = input('node', '');
        if (!empty($addon_menu) && is_array($addon_menu)) {
            foreach ($addon_menu as $key => $val) {
                $addon_menu[$key]['show'] = 0;
                $addon_menu[$key]['url'] = str_replace('/', '_', $val['url']);
                if ($node == $addon_menu[$key]['url'] && !empty($node)) {
                    $addon_menu[$key]['show'] = 1;
                }
                //是否有二级菜单
                if (isset($val['child']) && !empty($val['child']) && is_array($val['child'])) {
                    foreach ($val['child'] as $k => $v) {
                        $addon_menu[$key]['child'][$k]['url'] = str_replace('/', '_', $v['url']);
                        $addon_menu[$key]['child'][$k]['show'] = 0;
                        if ($node == $addon_menu[$key]['child'][$k]['url']) {
                            $addon_menu[$key]['child'][$k]['show'] = 1;
                        }

                    }
                }
            }
        }
        $is_show_config_menu = false;
        if (isset($addon_local['config']) && !empty($addon_local['config'])) {
            $is_show_config_menu = true;
        }
        if (isset($addon_local['is_theme']) && $addon_local['is_theme'] == true) {
            $is_show_config_menu = true;
        }

        $assign = [
            'isShowConfigMenu' => $is_show_config_menu,
            'node' =>  $node,
            'addonMenu' => $addon_menu,
            'addonInfo' =>  $addon_db,
            'name' =>  $name,
            'menu_app' =>  '',
            'Mkey' => '-1'
        ];
        $this->assign = array_merge($this->assign, $assign);
    }

    /**
     * 应用入口配置
     * @param string $type
     * @return mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @author: fudaoji<fdj@kuryun.cn>
     */
    public function index($type = '')
    {
        if (request()->isPost()) {
            $input = input();
            $flag = false;

            if ($type == 'news') {

                $validate = new Validate(
                    [
                        'keyword' => 'require',
                        'title' => 'require',
                        'picurl' => 'require',
                        'link' => 'require',
                    ],
                    [
                        'keyword.require' => '关键词不能为空',
                        'title.require' => '标题不能为空',
                        'picurl.require' => '请上传图文封面图',
                        'link.require' => '连接不能为空',
                    ]
                );
                $result = $validate->check(input());
                if ($result === false) {
                    $this->error($validate->getError());
                }
                $data['title'] = $input['title'];
                $data['url'] = $input['picurl'];
                $data['content'] = $input['news_content'];
                $data['link'] = $input['link'];
                $data['type'] = 'news';
                $data['keyword'] = $input['keyword'];
                $data['addon'] = $this->addonName;

                $rule = model('mpRule')->getOneByMap([
                    'type' => 'news',
                    'addon' => $this->addonName,
                    'rule_mpid' => $this->mpId,
                    'reply_id' => ['neq', 0]
                ]);


                if (!empty($rule)) {
                    $res_1 = model('mpReply')->updateOne([
                        'rp_mpid' => $this->mpId,
                        'id' => $rule['reply_id'],
                        'title' => $data['title'],
                        'url' => $data['url'],
                        'content' => $data['content'],
                        'type' => $data['type'],
                        'link' => $data['link']
                    ]);

                    $res_2 = model('mpRule')->updateOne([
                        'rule_mpid' => $this->mpId,
                        'id' => $rule['id'],
                        'keyword' => $data['keyword']
                    ]);
                    if ($res_1 || $res_2) {
                        $flag = true;
                    }
                } else {
                    Db::startTrans();
                    try{
                        $res_1 = model('mpReply')->addOne([
                            'rp_mpid' => $this->mpId,
                            'title' => $data['title'],
                            'url' => $data['url'],
                            'content' => $data['content'],
                            'type' => $data['type'],
                            'link' => $data['link']
                        ]);

                        $res_2 = model('mpRule')->addOne([
                            'rule_mpid' => $this->mpId,
                            'reply_id' => $res_1['id'],
                            'keyword' => $data['keyword'],
                            'type' => $type,
                            'addon' => $this->addonName
                        ]);
                        Db::commit();
                        $flag = true;
                    }catch (\Exception $e){
                        \think\facade\Log::write(json_encode($e->getMessage()));
                        Db::rollback();
                    }
                }

            }elseif ($type == 'addon') {
                $data['keyword'] = $input['keyword'];
                $data['type'] = 'addon';
                $data['addon'] = $this->addonName;
                $validate = new Validate(
                    [
                        'keyword' => 'require',
                    ],
                    [
                        'keyword.require' => '关键词不能为空',
                    ]
                );
                $result = $validate->check($data);
                if ($result === false) {
                    $this->error($validate->getError());
                }

                $result = model('mpRule')->getOneByMap([
                    'type' => 'addon',
                    'addon' => $this->addonName,
                    'rule_mpid' => $this->mpId
                ]);

                if (empty($result)) {
                    $res = model('mpRule')->addOne([
                        'type' => 'addon',
                        'addon' => $this->addonName,
                        'rule_mpid' => $this->mpId
                    ]);
                } else {
                    $res = model('mpRule')->updateOne([
                        'id' => $result['id'],
                        'type' => 'addon',
                        'addon' => $this->addonName,
                        'rule_mpid' => $this->mpId
                    ]);
                }
                $res && $flag = true;
            }
            if ($flag) {
                $this->success('保存成功');
            } else {
                $this->error('保存失败');
            }

        } else {
            $addon = $this->addonCfByDb;
            $url = null;
            if ($addon['entry_url'] != '') {
                $url = request()->domain() . addon_url($addon['entry_url'], ['mid' => $this->mpId]);
            }

            $rule = model('mpRule')->getOneByMap([
                'rule_mpid' => $this->mpId,
                'type' => $type,
                'addon' => $this->addonName
            ]);
            if($rule){
                $reply = model('mpReply')->getOneByMap([
                    'rp_mpid' => $this->mpId,
                    'id' => $rule['reply_id']
                ]);
            }else{
                $reply = null;
            }

            //$rule = $ruleModel->where(['type' => 'addon', 'addon' => input('name'), 'mpid' => $this->mid])->find();
            $api_file = ADDON_PATH . $this->addonName . '/controller/Api.php';
            $assign = [
                'isShowApi' => file_exists($api_file),
                'reply' => $reply,
                'rule' => $rule,
                'entryUrl' => $url,
                'type' => $type
            ];
            return $this->show($assign);
        }

    }

    /**
     * 参数配置
     * @author Geeson  314835050@qq.com
     * @param string $name
     * @return \think\response\View
     */
    public function config($name = '')
    {
        if (request()->isPost()) {
            $input = input();
            $data['mpid'] = $this->mpId;
            $data['addon'] = $input['addonName'];
            $data['infos'] = json_encode($input);
            $result = model('addonInfo')->getOneByMap(['mpid' => $this->mpId, 'addon' => $input['addonName']]);
            if (empty($result)) {
                model('addonInfo')->addOne($data);
            } else {
                model('addonInfo')->updateOne(['id' => $result['id'], 'infos' => json_encode($input)]);
            }
            $this->success('配置成功');
        } else {
            $result = model('addonInfo')->getOneByMap(['mpid' => $this->mpId, 'addon' => $name]);
            $addon_config_mp = json_decode($result['infos'], true);
            $config = json_decode($this->addonCfByDb['config'], true);
            if (!empty($addon_config_mp)) {
                if (!empty($config)) {
                    foreach ($config as $key1 => $val1) {
                        foreach ($addon_config_mp as $name => $val2) {
                            if ($val1['name'] == $name) {
                                $config[$key1] = $val1;
                                if ($val1['type'] == 'radio') {
                                    foreach ($val1['value'] as $key3 => $val3) {
                                        if ($val3['value'] == $val2) {
                                            $config[$key1]['value'][$key3]['checked'] = 1;
                                        } else {
                                            $config[$key1]['value'][$key3]['checked'] = 0;
                                        }
                                    }
                                } elseif ($val1['type'] == 'checkbox') {
                                    foreach ($val1['value'] as $key3 => $val3) {
                                        foreach ($val2 as $key4 => $val4) {
                                            if ($val3['name'] == $key4) {
                                                $config[$key1]['value'][$key3]['checked'] = 1;
                                                break;
                                            } else {
                                                $config[$key1]['value'][$key3]['checked'] = 0;
                                            }
                                        }
                                    }
                                } elseif ($val1['type'] == 'select') {
                                    foreach ($val1['value'] as $key3 => $val3) {
                                        if ($val3['value'] == $val2) {
                                            $config[$key1]['value'][$key3]['selected'] = 1;
                                        } else {
                                            $config[$key1]['value'][$key3]['selected'] = 0;
                                        }
                                    }
                                } else {
                                    $config[$key1]['value'] = $val2;
                                }
                            }
                        }
                    }
                }
            }
            $themes = [];
            $selected = '';

            if (isset($this->addonCfByFile['is_theme']) && $this->addonCfByFile['is_theme'] == true) {
                $themes = controller('common/addon', 'event')->getAddonThemes(['name' => $this->addonName]);
                if (isset($addon_config_mp['theme']) && !empty($addon_config_mp['theme'])) {
                    $selected = $addon_config_mp['theme'];
                }
            }
            $assign = [
                'selected' => $selected,
                'themes' => $themes,
                'config' => $config
            ];
            return $this->show($assign);
        }
    }

    /**
     * 应用的业务控制台
     * @param $node
     * @return mixed
     * @author: fudaoji<fdj@kuryun.cn>
     */
    public function console($node)
    {
        $node = str_replace('_', '/', $node);
        $url = addon_url($node, ['mid' => $this->mpId]);
        $assign = ['url' => $url];
        return $this->show($assign);
    }

}